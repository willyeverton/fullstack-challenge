version: '3.3'

services:
  # Frontend (React)
  frontend:
    build:
      context: ./frontend
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "8000:80"
    depends_on:
      - user-service
      - enrichment-service
    networks:
      - app-network
    environment:
      - VITE_API_BASE_URL=/api
      - VITE_ENRICHMENT_API_URL=/enrichment

  # User Service (PHP/Lumen)
  user-service:
    build:
      context: ./services/user-service-php
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=users
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    ports:
      - "8080:8000"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - app-network

  # Enrichment Service (Node.js/NestJS)
  enrichment-service:
    build:
      context: ./services/enrichment-service-node
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - ./services/enrichment-service-node:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/enrichment
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
      - RABBITMQ_QUEUE=user.created
      - RABBITMQ_DLX=user.created.dlx
      - RABBITMQ_DLQ=user.created.dlq
      - RABBITMQ_RETRY_DELAY=1000
      - RABBITMQ_RETRY_ATTEMPTS=3
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - app-network
    # healthcheck removido temporariamente

  # PostgreSQL
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:5-focal
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  mongodb_data:
  rabbitmq_data:


networks:
  app-network:
    driver: bridge
