openapi: 3.0.3
info:
  title: User Service API
  description: API para gerenciamento de usuários
  version: 1.0.0
  contact:
    name: Equipe de Desenvolvimento
servers:
  - url: http://localhost:8080/api
    description: Servidor de desenvolvimento local

paths:
  /users:
    get:
      summary: Lista todos os usuários
      description: Retorna uma lista de todos os usuários cadastrados
      operationId: getUsers
      responses:
        '200':
          description: Lista de usuários retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Cria um novo usuário
      description: Cria um novo usuário com os dados fornecidos
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Dados de entrada inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/{uuid}:
    get:
      summary: Obtém um usuário específico
      description: Retorna os detalhes de um usuário específico pelo UUID
      operationId: getUserByUuid
      parameters:
        - name: uuid
          in: path
          required: true
          description: UUID do usuário
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        uuid:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "João Silva"
        email:
          type: string
          format: email
          example: "joao.silva@example.com"
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
      required:
        - id
        - uuid
        - name
        - email
    
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 100
          example: "João Silva"
        email:
          type: string
          format: email
          maxLength: 255
          example: "joao.silva@example.com"
      required:
        - name
        - email
    
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Ocorreu um erro ao processar a requisição"
      required:
        - message
    
    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "Os dados fornecidos são inválidos"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            name: ["O nome é obrigatório", "O nome deve ter pelo menos 3 caracteres"]
            email: ["O email é obrigatório", "O email deve ser um endereço válido"]
      required:
        - message
        - errors 